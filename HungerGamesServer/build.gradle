/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    provided
    implementation.extendsFrom(provided)
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/ApionXD/HungerGames/")
        credentials {
            username = System.getenv("GITHUB_USER")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
    maven {
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        url = "https://repo.onarandombox.com/content/groups/public/"
    }
    maven {
        url = "https://repo.minebench.de/"
    }
    maven {
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

test {
    useJUnitPlatform()
}

dependencies {
    provided project(path: ':shared')

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    api('tk.shanebee.hg:hungergames:5.2.4')
    api('org.spigotmc:spigot-api:1.19.3-R0.1-SNAPSHOT')
    compileOnly('com.onarandombox.multiversecore:multiverse-core:4.3.2')
    implementation('com.google.guava:guava:latest')
    implementation('org.jetbrains:annotations:16.0.2')
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'
    compileOnly 'net.luckperms:api:5.4'
    compileOnly 'io.github.waterfallmc:waterfall-api:1.19-R0.1-SNAPSHOT'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
}

jar {
    from configurations.provided.asFileTree.files.collect { zipTree(it) }
}